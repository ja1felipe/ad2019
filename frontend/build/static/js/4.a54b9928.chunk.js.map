{"version":3,"sources":["components/Logo/styles.ts","components/Logo/Logo.tsx","components/Header/styles.ts","components/Header/index.tsx","services/api.ts","components/Form/styles.ts","components/Form/index.tsx","components/Modal/index.tsx","pages/Home/styles.ts","components/Table/styles.ts","components/Table/index.tsx","pages/Home/TablePage/styles.ts","pages/Home/TablePage/index.tsx","pages/Home/index.tsx"],"names":["Container","styled","div","Title","h1","props","theme","colors","primary","Logo","icon","bxHappyHeartEyes","style","color","secondary","fontSize","Header","margin","connection","axios","create","baseURL","api","fetchUsers","page","Promise","resolve","reject","get","then","res","console","log","data","users","pages","catch","error","response","store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","getUser","id","user","deleteUser","delete","createUser","post","updateUser","put","draw","FormBox","form","Input","input","dark","InputGroup","Fields","Button","button","light","Form","useState","name","setName","email","setEmail","loading","setLoading","validateForm","validator","isEmail","clearFields","useEffect","_id","onSubmit","e","preventDefault","setShow","refresh","handleSubmit","htmlFor","value","onChange","target","placeholder","disabled","className","Modal","display","show","width","height","alignItems","justifyContent","onClick","aria-label","padding","ButtonBox","TableBox","table","contrast","Table","deleting","setDeleting","selectUser","setUser","useHistory","prev","columns","map","column","i","key","textAlign","elem","idx","row_text","path","obj","separator","properties","Array","isArray","split","reduce","curr","resolvePath","selector","background","bxPencil","undefined","bxsTrash","PaginationBox","TablePage","setData","setPages","setPage","setRefresh","extRefresh","Spinner","length","marginTop","Number","from","Home","handleShowModal"],"mappings":"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","file":"static/js/4.a54b9928.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Title = styled.h1`\n  font-size: 50px;\n  font-family: 'Lobster' !important;\n  color: ${(props) => props.theme.colors.primary};\n  margin: 0;\n`;\n","import React from 'react';\n\nimport { Container, Title } from './styles';\nimport { Icon } from '@iconify/react';\nimport bxHappyHeartEyes from '@iconify/icons-bx/bx-happy-heart-eyes';\nimport theme from '../../styles/theme';\n\nconst Logo: React.FC = () => {\n  return (\n    <Container>\n      <Title>Amigo Secreto</Title>\n      <Icon\n        icon={bxHappyHeartEyes}\n        style={{ color: theme.colors.secondary, fontSize: '70px' }}\n      />\n    </Container>\n  );\n};\n\nexport default Logo;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n`;\n","import React from 'react';\nimport Logo from '../Logo/Logo';\n\nimport { Container } from './styles';\n\nconst Header: React.FC = () => {\n  return (\n    <>\n      <Container>\n        <Logo />\n      </Container>\n      <hr style={{ margin: 0 }} />\n    </>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\nimport { store } from 'react-notifications-component';\nimport { IData } from '../types';\n\nconst connection = axios.create({ baseURL: 'https://apiad2019.herokuapp.com' });\n\ninterface IDataRes {\n  pages: number;\n  data: IData[];\n}\n\nconst api = {\n  fetchUsers(page: number): Promise<IDataRes> {\n    return new Promise((resolve, reject) => {\n      connection\n        .get(`/users?page=${page}&limit=5`)\n        .then((res) => {\n          console.log(res);\n          resolve({ data: res.data.users, pages: res.data.pages });\n        })\n        .catch((error) => {\n          console.log(error.response);\n          store.addNotification({\n            title: 'Falha!',\n            message: 'Erro ao listar usuários.',\n            type: 'danger',\n            insert: 'top',\n            container: 'top-right',\n            animationIn: ['animate__animated', 'animate__fadeIn'],\n            animationOut: ['animate__animated', 'animate__fadeOut'],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          });\n        });\n    });\n  },\n\n  getUser(id: string): Promise<IData> {\n    return new Promise((resolve, reject) => {\n      connection\n        .get(`/users/${id}`)\n        .then((res) => {\n          console.log(res);\n          resolve(res.data.user);\n        })\n        .catch((error) => {\n          console.log(error.response);\n          store.addNotification({\n            title: 'Falha!',\n            message: 'Erro ao buscar usuário.',\n            type: 'danger',\n            insert: 'top',\n            container: 'top-right',\n            animationIn: ['animate__animated', 'animate__fadeIn'],\n            animationOut: ['animate__animated', 'animate__fadeOut'],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          });\n        });\n    });\n  },\n\n  deleteUser(id: string): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      connection\n        .delete(`/users/${id}`)\n        .then((res) => {\n          console.log(res);\n          resolve(true);\n        })\n        .catch((error) => {\n          resolve(false);\n          console.log(error.response);\n          store.addNotification({\n            title: 'Falha!',\n            message: 'Erro ao deletar usuários.',\n            type: 'danger',\n            insert: 'top',\n            container: 'top-right',\n            animationIn: ['animate__animated', 'animate__fadeIn'],\n            animationOut: ['animate__animated', 'animate__fadeOut'],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          });\n        });\n    });\n  },\n\n  createUser(data: IData): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      connection\n        .post(`/users/`, data)\n        .then((res) => {\n          console.log(res);\n          store.addNotification({\n            title: 'Sucesso!',\n            message: 'Usuário criado com sucesso.',\n            type: 'success',\n            insert: 'top',\n            container: 'top-right',\n            animationIn: ['animate__animated', 'animate__fadeIn'],\n            animationOut: ['animate__animated', 'animate__fadeOut'],\n            dismiss: {\n              duration: 6000,\n              onScreen: true\n            }\n          });\n          resolve(true);\n        })\n        .catch((error) => {\n          resolve(false);\n          console.log(error.response);\n          store.addNotification({\n            title: 'Falha!',\n            message: 'Falha ao criar usuário.',\n            type: 'danger',\n            insert: 'top',\n            container: 'top-right',\n            animationIn: ['animate__animated', 'animate__fadeIn'],\n            animationOut: ['animate__animated', 'animate__fadeOut'],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          });\n        });\n    });\n  },\n\n  updateUser(id: string, data: IData): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      connection\n        .put(`/users/${id}`, data)\n        .then((res) => {\n          console.log(res);\n          store.addNotification({\n            title: 'Sucesso!',\n            message: 'Usuário editado com sucesso.',\n            type: 'success',\n            insert: 'top',\n            container: 'top-right',\n            animationIn: ['animate__animated', 'animate__fadeIn'],\n            animationOut: ['animate__animated', 'animate__fadeOut'],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          });\n          resolve(true);\n        })\n        .catch((error) => {\n          resolve(false);\n          console.log(error.response);\n          store.addNotification({\n            title: 'Falha!',\n            message: 'Falha ao editar usuário.',\n            type: 'danger',\n            insert: 'top',\n            container: 'top-right',\n            animationIn: ['animate__animated', 'animate__fadeIn'],\n            animationOut: ['animate__animated', 'animate__fadeOut'],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          });\n        });\n    });\n  },\n\n  draw(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      connection\n        .post(`/users/shuffle`)\n        .then((res) => {\n          console.log(res);\n          store.addNotification({\n            title: 'Sucesso!',\n            message: 'Usuário sorteado e emails enviados com sucesso.',\n            type: 'success',\n            insert: 'top',\n            container: 'top-right',\n            animationIn: ['animate__animated', 'animate__fadeIn'],\n            animationOut: ['animate__animated', 'animate__fadeOut'],\n            dismiss: {\n              duration: 6000,\n              onScreen: true\n            }\n          });\n          resolve(true);\n        })\n        .catch((error) => {\n          resolve(false);\n          console.log(error.response);\n          store.addNotification({\n            title: 'Falha!',\n            message: 'Falha ao sortear usuário.',\n            type: 'danger',\n            insert: 'top',\n            container: 'top-right',\n            animationIn: ['animate__animated', 'animate__fadeIn'],\n            animationOut: ['animate__animated', 'animate__fadeOut'],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          });\n        });\n    });\n  }\n};\n\nexport default api;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n`;\n\nexport const FormBox = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  & label {\n    text-transform: uppercase;\n    font-size: 13px;\n  }\n\n  & h1 {\n    text-align: center;\n    font-size: 40px;\n    font-family: 'Lobster' !important;\n    margin-bottom: 15px;\n    color: ${(props) => props.theme.colors.primary};\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: none;\n  border-bottom: 2px solid ${(props) => props.theme.colors.secondary + '82'};\n  background: none;\n  color: ${(props) => props.theme.colors.dark};\n  margin-bottom: 25px;\n  font-size: 12px;\n  width: 220px;\n  &:focus {\n    border: none;\n    outline: none;\n    border-bottom: 2px solid ${(props) => props.theme.colors.secondary};\n  }\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 5px;\n`;\n\nexport const Fields = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-column-gap: 15px;\n  grid-row-gap: 15px;\n  & label {\n    text-transform: uppercase;\n    font-size: 13px;\n  }\n`;\n\nexport const Button = styled.button`\n  background: ${(props) => props.theme.colors.secondary + 'e0'};\n  color: ${(props) => props.theme.colors.light};\n  padding: 10px;\n  border: none;\n  cursor: pointer;\n  text-transform: uppercase;\n  font-weight: 600;\n  width: 100% !important;\n  height: 100% !important;\n\n  &:disabled {\n    background: ${(props) => props.theme.colors.secondary};\n  }\n\n  &:hover {\n    background: ${(props) => props.theme.colors.secondary};\n    color: ${(props) => props.theme.colors.light};\n  }\n`;\n","import React, {\n  ChangeEvent,\n  useState,\n  FormEvent,\n  useEffect,\n  HTMLAttributes\n} from 'react';\nimport validator from 'validator';\nimport api from '../../services/api';\nimport { IData } from '../../types';\n\nimport {\n  Container,\n  FormBox,\n  Input,\n  InputGroup,\n  Fields,\n  Button\n} from './styles';\n\ninterface IProps extends HTMLAttributes<HTMLElement> {\n  user?: IData;\n  setShow: () => void;\n  refresh?: () => void;\n}\n\nconst Form: React.FC<IProps> = (props) => {\n  const [name, setName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (props.user && props.user._id) {\n      setLoading(true);\n      api.getUser(props.user._id).then((res: IData) => {\n        setName(res.name);\n        setEmail(res.email);\n        setLoading(false);\n      });\n    }\n  }, [props.user]);\n\n  function validateForm() {\n    if (name === '' || email === '') {\n      return false;\n    }\n\n    if (!validator.isEmail(email)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function handleSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    setLoading(true);\n    let data: IData = {\n      name,\n      email\n    };\n    if (!props.user) {\n      api.createUser(data).then((res) => {\n        if (res) {\n          setLoading(false);\n          props.setShow();\n          props.refresh && props.refresh();\n          clearFields();\n        }\n      });\n    } else if (props.user._id) {\n      api.updateUser(props.user._id, data).then((res) => {\n        if (res) {\n          setLoading(false);\n          props.setShow();\n          props.refresh && props.refresh();\n          clearFields();\n        }\n      });\n    }\n  }\n\n  function clearFields() {\n    setName('');\n    setEmail('');\n  }\n\n  return (\n    <Container>\n      <FormBox\n        onSubmit={(e: FormEvent<HTMLFormElement>) => {\n          handleSubmit(e);\n        }}\n      >\n        {props.user ? (\n          <h1>Editar usuário</h1>\n        ) : (\n          <h1>Cadastro de novo usuário</h1>\n        )}\n        <Fields>\n          <InputGroup>\n            <label htmlFor='name'>name</label>\n            <Input\n              id='name'\n              value={name}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setName(e.target.value)\n              }\n              placeholder='ex: João Paulo'\n              type='text'\n            />\n          </InputGroup>\n          <InputGroup>\n            <label htmlFor='email'>E-mail</label>\n            <Input\n              id='email'\n              value={email}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setEmail(e.target.value)\n              }\n              placeholder='ex: joao@email.com'\n              type='email'\n            />\n          </InputGroup>\n        </Fields>\n        <Button\n          type='submit'\n          disabled={!validateForm()}\n          title={\n            validateForm()\n              ? ''\n              : 'Por favor preencha todos os campos corretamente.'\n          }\n          className={`button ${loading ? 'is-loading' : ''}`}\n        >\n          {props.user ? 'Editar' : 'Criar'}\n        </Button>\n      </FormBox>\n    </Container>\n  );\n};\n\nexport default Form;\n","import React, { HTMLAttributes, useState } from 'react';\nimport { IData } from '../../types';\nimport Form from '../Form';\n\ninterface IProps extends HTMLAttributes<HTMLElement> {\n  user?: IData;\n  show: boolean;\n  setShow: () => void;\n  refresh?: () => void;\n}\n\nconst Modal: React.FC<IProps> = (props) => {\n  return (\n    <div\n      className='modal'\n      style={{\n        display: props.show ? 'flex' : 'none',\n        width: '100vw',\n        height: '100vh',\n        alignItems: 'center'\n      }}\n    >\n      <div className='modal-background'></div>\n      <div className='modal-card'>\n        <header\n          className='modal-card-head'\n          style={{ display: 'flex', justifyContent: 'flex-end' }}\n        >\n          <button\n            onClick={props.setShow}\n            className='delete'\n            aria-label='close'\n          ></button>\n        </header>\n        <section className='modal-card-body' style={{ padding: 0 }}>\n          <Form\n            refresh={props.refresh}\n            setShow={props.setShow}\n            user={props.user}\n          />\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-top: 15px;\n  & button {\n    background-color: ${(props) => props.theme.colors.secondary};\n    color: ${(props) => props.theme.colors.light};\n    margin: 0 10px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  & .button {\n    width: 30px;\n    height: 30px;\n    margin-left: 5px;\n  }\n`;\n\nexport const TableBox = styled.table`\n  & th,\n  & td {\n    padding: 10px 20px;\n  }\n\n  & th {\n    background: ${(props) => props.theme.colors.primary};\n    color: ${(props) => props.theme.colors.light};\n  }\n\n  & tr {\n    background: ${(props) => props.theme.colors.contrast};\n    border-bottom: 1px solid ${(props) => props.theme.colors.light};\n  }\n  & tr:hover {\n    background: ${(props) => props.theme.colors.light};\n    border-bottom: 1px solid ${(props) => props.theme.colors.contrast};\n  }\n`;\n","import React, { HTMLAttributes, useState } from 'react';\nimport { IData } from '../../types';\n\nimport { Container, TableBox } from './styles';\nimport { Icon } from '@iconify/react';\nimport bxsTrash from '@iconify/icons-bx/bxs-trash';\nimport bxPencil from '@iconify/icons-bx/bx-pencil';\nimport theme from '../../styles/theme';\nimport api from '../../services/api';\nimport { useHistory } from 'react-router-dom';\nimport Modal from '../Modal';\n\ninterface IColumn {\n  name: string;\n  selector: string;\n}\n\ninterface ITable extends HTMLAttributes<HTMLElement> {\n  columns: IColumn[];\n  data: IData[];\n  refresh: (state: boolean) => void;\n}\n\nconst Table: React.FC<ITable> = (props) => {\n  const [deleting, setDeleting] = useState<boolean>(false);\n  const [show, setShow] = useState<boolean>(false);\n  const [selectUser, setUser] = useState<IData>();\n  const history = useHistory();\n\n  function resolvePath(path: string, obj: object, separator = '.') {\n    let properties: (string | any)[] = Array.isArray(path)\n      ? path\n      : path.split(separator);\n    return properties.reduce((prev: any, curr: any) => prev && prev[curr], obj);\n  }\n\n  function handleDelete(id: string) {\n    setDeleting(true);\n    api.deleteUser(id).then((res) => {\n      if (res) {\n        props.refresh(true);\n        setDeleting(false);\n      }\n    });\n  }\n\n  function handleUpdate(user: IData) {\n    setUser(user);\n    setShow(true);\n  }\n\n  function handleShowModal(): void {\n    setShow((prev) => !prev);\n  }\n\n  function handleRefresh(): void {\n    props.refresh(true);\n  }\n\n  return (\n    <Container>\n      <Modal\n        refresh={handleRefresh}\n        setShow={handleShowModal}\n        show={show}\n        user={selectUser}\n      />\n      <TableBox>\n        <thead>\n          <tr>\n            {props.columns.map((column, i) => (\n              <th key={i}>\n                <span>{column.name}</span>\n              </th>\n            ))}\n            <th style={{ textAlign: 'center' }}>Ações</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.data.map((elem, idx) => {\n            return (\n              <tr key={idx}>\n                {props.columns.map((column, i) => {\n                  let row_text = resolvePath(column.selector, elem);\n                  return <td key={i}>{row_text}</td>;\n                })}\n                <td>\n                  <button\n                    onClick={() => {\n                      if (elem) handleUpdate(elem);\n                    }}\n                    style={{ background: theme.colors.secondary }}\n                    className='button'\n                  >\n                    <span className='icon is-small'>\n                      <Icon\n                        icon={bxPencil}\n                        style={{\n                          color: theme.colors.contrast,\n                          fontSize: '20px'\n                        }}\n                      />\n                    </span>\n                  </button>\n                  <button\n                    onClick={() => {\n                      if (elem._id) handleDelete(elem._id);\n                    }}\n                    className={`button is-danger ${\n                      deleting ? 'is-loading' : ''\n                    }`}\n                  >\n                    <span className='icon is-small'>\n                      {deleting ? undefined : (\n                        <Icon\n                          icon={bxsTrash}\n                          style={{\n                            color: theme.colors.contrast,\n                            fontSize: '20px'\n                          }}\n                        />\n                      )}\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </TableBox>\n    </Container>\n  );\n};\n\nexport default Table;\n","import styled from 'styled-components';\n\nexport const TableBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 20px;\n`;\n\nexport const PaginationBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  & button,\n  & select {\n    margin: 5px;\n    height: 30px !important;\n  }\n`;\n","import React, { ChangeEvent, HTMLAttributes, useEffect, useState } from 'react';\n\nimport Spinner from '../../../components/Spinner';\nimport Table from '../../../components/Table';\nimport api from '../../../services/api';\nimport { IData } from '../../../types';\nimport { TableBox, PaginationBox } from './styles';\ninterface IProp extends HTMLAttributes<HTMLElement> {\n  extRefresh?: boolean;\n}\nconst TablePage: React.FC<IProp> = (props) => {\n  const [data, setData] = useState<IData[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [pages, setPages] = useState<number>(1);\n  const [page, setPage] = useState<number>(1);\n  const [refresh, setRefresh] = useState<boolean>(false);\n\n  const columns = [\n    {\n      name: 'Nome',\n      selector: 'name'\n    },\n    {\n      name: 'E-mail',\n      selector: 'email'\n    }\n  ];\n\n  useEffect(() => {\n    setLoading(true);\n    api.fetchUsers(page).then((res) => {\n      setData(res.data);\n      setPages(res.pages);\n      setLoading(false);\n    });\n    setRefresh(false);\n  }, [page, refresh, props.extRefresh]);\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : data.length > 0 ? (\n        <TableBox>\n          <Table refresh={setRefresh} columns={columns} data={data} />\n        </TableBox>\n      ) : (\n        <div style={{ textAlign: 'center', marginTop: 20, fontSize: 25 }}>\n          Nenhum usuário cadastrado ainda, aproveite e cadastre um novo :D\n        </div>\n      )}\n      {data.length > 0 && (\n        <PaginationBox>\n          <button\n            onClick={() => setPage((prev) => prev - 1)}\n            className={`button`}\n            disabled={page < 2 ? true : false}\n          >\n            Anterior\n          </button>\n          <select\n            className='select'\n            value={page}\n            onChange={(e: ChangeEvent<HTMLSelectElement>) =>\n              setPage(Number(e.target.value))\n            }\n          >\n            {Array.from(Array(pages), (e, i) => {\n              return (\n                <option key={i} value={i + 1}>\n                  {i + 1}\n                </option>\n              );\n            })}\n          </select>\n          <button\n            disabled={page === pages ? true : false}\n            onClick={() => setPage((prev) => prev + 1)}\n            className='button'\n          >\n            Próximo\n          </button>\n        </PaginationBox>\n      )}\n    </>\n  );\n};\n\nexport default TablePage;\n","import React, { useState } from 'react';\nimport Header from '../../components/Header';\nimport Modal from '../../components/Modal';\nimport api from '../../services/api';\nimport { ButtonBox } from './styles';\nimport TablePage from './TablePage';\n\nconst Home: React.FC = () => {\n  const [show, setShow] = useState<boolean>(false);\n  const [refresh, setRefresh] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  function handleShowModal(): void {\n    setShow((prev) => !prev);\n  }\n\n  function handleRefresh(): void {\n    setRefresh((prev) => !prev);\n  }\n\n  function handleDraw(): void {\n    setLoading(true);\n    api.draw().then(() => {\n      setLoading(false);\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <ButtonBox>\n        <button className='button' onClick={handleShowModal}>\n          Cadastrar novo usuário\n        </button>\n        <button\n          className={`button ${loading ? 'is-loading' : ''}`}\n          onClick={handleDraw}\n        >\n          Fazer sorteio\n        </button>\n      </ButtonBox>\n      <Modal refresh={handleRefresh} setShow={handleShowModal} show={show} />\n      <TablePage extRefresh={refresh} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}